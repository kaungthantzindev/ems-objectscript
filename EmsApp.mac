ROUTINE EmsApp
Main
    Write #
    Write "=========================="
    Write !!, "ÔºäÔºäÔºäÁ§æÂì°ÁôªÈå≤PGÔºäÔºäÔºä", !!!
    Do Start
    Quit

Start
    New input, state, fields, currentPosition, position
    Set state = 1

    While state {
        Do Prompt(.input, .position)

        Set fields = $LISTBUILD("KanjiName", "KanaName", "Address")
        Set currentPosition = $LISTLENGTH(fields) + 1

        While 1 {
            Do AskOperationKey(.input, .position)

            If input("OperationKey") = "@" {
                Do Create(.input)
                Quit
            }
            ElseIf input("OperationKey") = "DEL" {
                Do Delete(input("EmployeeNumber"))
                Quit
            }
            ElseIf input("OperationKey") = "$" {
                Set state = 0
                Write !!, "üëã Bye!", !
                Quit
            }
            ElseIf input("OperationKey") = "/" {
                Do HandleMoveUp(fields, .currentPosition, .input, .position)
            }
            ElseIf input("OperationKey") = "//" {
                Do HandleMoveToStart(fields, .currentPosition, .input, .position)
            }
            Else {
                Write "‚ö†Ô∏è Unknown operation key!", !
            }
        }
    }
    Quit

Prompt(input, position)
    New empId, existing
    Do InputField("EmployeeNumber", .input)

    Set empId = input("EmployeeNumber")
    Set existing = $Data(^Employee(empId))

    If existing {
        Set input("KanjiName") = ^Employee(empId, "empKanjiName")
        Set input("KanaName") = ^Employee(empId, "empKanaName")
        Set input("Address") = ^Employee(empId, "empAddress")

        Write !,"‚úÖ Employee Found!",!
        Write ?4, "1. Á§æÂì°Áï™Âè∑ Ôºù ", input("EmployeeNumber"), !
        Set position("EmployeeNumber") = $Y
        Write ?4, "2. Ê∞èÂêçÊº¢Â≠ó Ôºù ", input("KanjiName"), !
        Set position("KanjiName") = $Y
        Write ?4, "3. Ê∞èÂêç„Ç´„Éä Ôºù ", input("KanaName"), !
        Set position("KanaName") = $Y
        Write ?4, "4. ‰Ωè„ÄÄ„ÄÄÊâÄ Ôºù ", input("Address"), !
        Set position("Address") = $Y
        Quit
    }

    New fields, i, fieldName
    Set fields = $LISTBUILD("KanjiName", "KanaName", "Address")
    For i=1:1:$LISTLENGTH(fields) {
        Set fieldName = $LISTGET(fields, i)
        Do InputField(fieldName, .input, .position)
    }
    Quit

InputField(fieldName, input, position)
    New value
    While 1 {
        If fieldName = "EmployeeNumber" {
            Read ?4, "1. Á§æÂì°Áï™Âè∑ Ôºù ", value, !
            If '$$IsValidEmpNumber^EmsApp(value) {
                Write "‚ùå Invalid Employee Number!", !
            } Else {
                Set position("EmployeeNumber") = $Y 
                Set input("EmployeeNumber") = value
                Quit
            }
        }
        ElseIf fieldName = "KanjiName" {
            Read ?4, "2. Ê∞èÂêçÊº¢Â≠ó Ôºù ", value, !
            If '$$IsZenkaku^EmsApp(value) {
                Write "‚ùå Kanji Name must be Zenkaku characters!", !
            } Else {
                Set position("KanjiName") = $Y 
                Set input("KanjiName") = value
                Quit
            }
        }
        ElseIf fieldName = "KanaName" {
            Read ?4, "3. Ê∞èÂêç„Ç´„Éä Ôºù ", value, !
            If '$$IsHankaku^EmsApp(value) {
                Write "‚ùå Kana Name must be Hankaku characters!", !
            } Else {
                Set position("KanaName") = $Y 
                Set input("KanaName") = value
                Quit
            }
        }
        ElseIf fieldName = "Address" {
            Read ?4, "4. ‰Ωè„ÄÄ„ÄÄÊâÄ Ôºù ", value, !
            If '$$IsZenkaku^EmsApp(value) {
                Write "‚ùå Address must be Zenkaku characters!", !
            } Else {
                Set position("Address") = $Y
                Set input("Address") = value
                Quit
            }
        }
    }
    Quit

SetCursor(row)
    #; Set cursorLog = $CHAR(27)_"["_row_"H"
    #; Write cursorLog
    #; WRITE $X,"/",$CHAR(8),$X
    #; WRITE $Y,$CHAR(10),$Y
    #; WRITE !,$CHAR(27)_"[1m"
    #; WRITE *27,*91,*49,*109
    Write $CHAR(27)_"["_row_"H"
    set $Y = $Y
    Write $C(27)_"[0J"
    Quit

AskOperationKey(input, position)
    New opKey
    Read !, "<@:ÁôªÈå≤ DEL:ÂâäÈô§ /:‰∏ÄË°å‰∏ä„Åí„Çã //:Á§æÂì°Áï™Âè∑„Å∏ $:ÁµÇ‰∫Ü Ë°åÁï™Âè∑> = ", opKey, !!
    Set position("OperationKey") = $Y 
    Set input("OperationKey") = opKey
    Quit

Create(input)

    Set id = input("EmployeeNumber")
    Set ^Employee(id, "empNumber") = input("EmployeeNumber")
    Set ^Employee(id, "empKanjiName") = input("KanjiName")
    Set ^Employee(id, "empKanaName") = input("KanaName")
    Set ^Employee(id, "empAddress") = input("Address")

    Write !, "‚úÖ Employee registered successfully!", !
    Quit

Delete(id)
    If '$Data(^Employee(id)) {
        Write "‚ùå Unregistered data", !
        Quit
    }

    Kill ^Employee(id)
    Write !,"‚úÖ Employee ", id, " Successfully deleted!", !
    Quit

#; ShowData(id)
#;     If '$Data(^Employee(id)) {
#;         Write "‚ùå Unregistered data"
#;         Quit
#;     }

#;     Write !, "Á§æÂì°Áï™Âè∑ Ôºù ", ^Employee(id, "empNumber"), !
#;     Write "Ê∞èÂêçÊº¢Â≠ó Ôºù ", ^Employee(id, "empKanjiName"), !
#;     Write "Ê∞èÂêç„Ç´„Éä Ôºù ", ^Employee(id, "empKanaName"), !
#;     Write "‰Ωè„ÄÄ„ÄÄÊâÄ Ôºù ", ^Employee(id, "empAddress"), !
#;     Quit

HandleMoveUp(fields, currentPosition, input, position)
    If currentPosition > 1 {
        Set currentPosition = currentPosition - 1
        Set fieldName = $LISTGET(fields, currentPosition)
        Do SetCursor(position(fieldName))
        Do InputField(fieldName, .input, .position)
    } Else {
        Write "‚ö†Ô∏è Already at the first field!", !
    }
    Quit

HandleMoveToStart(fields, currentPosition, input, position)
    #; Set currentPosition = 1
    #; Set fieldName = $LISTGET(fields, currentPosition)
    Set fieldName = "EmployeeNumber"
    Do SetCursor(position(fieldName))
    Do InputField(fieldName, .input, .position)
    #; Do Prompt(.input)
    Set currentPosition = $LISTLENGTH(fields) + 1 
    Quit

IsValidEmpNumber(value)
    If (value'?1n.N) || (value < 0) || (value > 9999) {
        Quit 0
    }
    Quit 1

IsZenkaku(value)
    If $MATCH(value, "^[‰∏Ä-Èæ•„ÅÅ-„Çì„Ç°-„É∂„Éº„ÄÄ]+$") {
        Quit 1
    }
    Quit 0

IsHankaku(value)
    If $MATCH(value, "^[ÔΩ¶-Ôæü ÔΩ°-Ôæü]+$") {
        Quit 1
    }
    Quit 0

#; Validate(input)
#;     Set isValid = 1

#;     If (input("EmployeeNumber")'?.N) || (input("EmployeeNumber") < 0) || (input("EmployeeNumber") > 9999) {
#;         Write "‚ùå Invalid Employee Number!", !
#;         Set isValid = 0
#;     }

#;     If '$$IsZenkaku^EmsApp(input("KanjiName")) {
#;         Write "‚ùå Kanji Name must be Zenkaku characters!", !
#;         Set isValid = 0
#;     }

#;     If '$$IsHankaku^EmsApp(input("KanaName")) {
#;         Write "‚ùå Kana Name must be Hankaku characters!", !
#;         Set isValid = 0
#;     }

#;     If '$$IsZenkaku^EmsApp(input("Address")) {
#;         Write "‚ùå Address must be Zenkaku characters!", !
#;         Set isValid = 0
#;     }

#;     Quit isValid
